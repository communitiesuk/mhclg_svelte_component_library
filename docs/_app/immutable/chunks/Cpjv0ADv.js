import"./CWj6FrbW.js";import{p as q,G as z,f as B,s as m,a as F,c as r,r as i,x as R,I as V,z as o,t as j,D as P,a9 as L,y as w,u as J}from"./BQOcVDnD.js";import{t as s,c as Y,a as n,s as G}from"./Dp3jeoTR.js";import{c as Q}from"./CM6Y-JJe.js";import{s as X}from"./Bx8udYmP.js";import{B as Z,d as ee}from"./kqoadxQb.js";import{W as te,P as ae,C as oe,B as re,a as ie,t as ne,c as se}from"./JWqNqQUs.js";import{p as le}from"./D5heuD2C.js";import{k as de}from"./lMwbQCpd.js";import{S as l}from"./DE79-ung.js";import{e as ce}from"./hy64cfae.js";import{s as ue}from"./ByC2DMpr.js";import{A as me,a as pe}from"./JE6QcVhM.js";import"./69_IOA4Y.js";import{C as be}from"./B8qjdm4g.js";const he=`
<Search value="driving licence" />
`,ge=`
<Search inline_label={false} />
`,ve=`
<div class="p-8 bg-[#1d70b8]"> {/* Blue background for context */}
  <Search on_govuk_blue={true} />
</div>
`,_e=`
<div class="p-8 bg-[#1d70b8]"> {/* Blue background for context */}
  <Search
    label_text="Search"
    inline_label={false}
    on_govuk_blue={true}
    label_size="s"
    label_margin_bottom={3}
    homepage={true}
    size="large"
  />
</div>
`,fe=`
<Search label_text="Search" />
`,ye=`
<Search label_id="my_unique_id" />
`,we=`
<Search size="large" />
`,Se=`
<Search name="my_own_fieldname" />
`,xe=`
<Search aria_controls="wrapper" />
`,ke=`
<Search button_text="Search absolutely everywhere" />
`,Ae=`
<Search label_size="xl" />
`,Ce=`
<Search wrap_label_in_a_heading={true} heading_level={1} />
`,Ee=`
<Search margin_bottom={9} />
`,Oe=`
<Search label_margin_bottom={9} inline_label={false} />
`,We=`
<Search label_custom_class="govuk-heading-xl" inline_label={false} />
`,Pe=`
<Search disable_corrections={true} />
`,Be=`
<Search button_background_color="#00625e" />
`,ze=`
<Search 
  hint="Enter your full name"
  input_width="two-thirds"
  inline_label={false}
/>
`,Ve=`
<script lang="ts">
  import Search from '$lib/components/ui/Search.svelte';

  let demoSearchValue = $state("initial value"); 
<\/script>

<Search
  label_text="Search with bound value"
  bind:value={demoSearchValue}
/>

<p class="govuk-body mt-4">Current bound value: <strong>{demoSearchValue}</strong></p>

`,Te=a=>{var e=Xe(),t=r(e);l(t,{value:"driving licence"}),i(e),n(a,e)},Le=a=>{var e=Ze(),t=r(e);l(t,{inline_label:!1}),i(e),n(a,e)},je=a=>{var e=et(),t=r(e);l(t,{on_govuk_blue:!0}),i(e),n(a,e)},Ie=a=>{var e=tt(),t=r(e);l(t,{label_text:"Search",inline_label:!1,on_govuk_blue:!0,label_size:"s",label_margin_bottom:3,homepage:!0,size:"large"}),i(e),n(a,e)},De=a=>{var e=at(),t=r(e);l(t,{label_text:"Search"}),i(e),n(a,e)},$e=a=>{var e=ot(),t=r(e);l(t,{label_id:"my_unique_id"}),i(e),n(a,e)},He=a=>{var e=rt(),t=r(e);l(t,{size:"large"}),i(e),n(a,e)},Ne=a=>{var e=it(),t=r(e);l(t,{name:"my_own_fieldname"}),i(e),n(a,e)},Ge=a=>{var e=nt(),t=r(e);l(t,{aria_controls:"wrapper"}),i(e),n(a,e)},qe=a=>{var e=st(),t=r(e);l(t,{button_text:"Search absolutely everywhere"}),i(e),n(a,e)},Fe=a=>{var e=lt(),t=r(e);l(t,{label_size:"xl"}),i(e),n(a,e)},Me=a=>{var e=dt(),t=r(e);l(t,{wrap_label_in_a_heading:!0,heading_level:1}),i(e),n(a,e)},Ue=a=>{var e=ct(),t=r(e);l(t,{margin_bottom:9}),i(e),n(a,e)},Ke=a=>{var e=ut(),t=r(e);l(t,{label_margin_bottom:9,inline_label:!1}),i(e),n(a,e)},Re=a=>{var e=mt(),t=m(B(e),2),c=r(t),S=m(r(c),3);S.textContent="inline_label=false",R(),i(c),i(t);var v=m(t,2),x=r(v);l(x,{label_custom_class:"govuk-heading-xl",inline_label:!1}),i(v),n(a,e)},Je=a=>{var e=pt(),t=r(e);l(t,{disable_corrections:!0}),i(e),n(a,e)},Ye=a=>{var e=bt(),t=m(B(e),2),c=r(t);l(c,{button_background_color:"#00625e"}),i(t),n(a,e)},Qe=a=>{var e=ht(),t=m(B(e),2),c=r(t);l(c,{hint:"Enter your full name",input_width:"two-thirds",inline_label:!1}),i(t),n(a,e)};var Xe=s('<div class="p-5 bg-white"><!></div>'),Ze=s('<div class="p-5 bg-white"><!></div>'),et=s('<div class="p-5 bg-[#1d70b8]"><!></div>'),tt=s('<div class="p-5 bg-[#1d70b8]"><!></div>'),at=s('<div class="p-5 bg-white"><!></div>'),ot=s('<div class="p-5 bg-white"><!></div>'),rt=s('<div class="p-5 bg-white"><!></div>'),it=s('<div class="p-5 bg-white"><!></div>'),nt=s('<div class="p-5 bg-white"><!></div>'),st=s('<div class="p-5 bg-white"><!></div>'),lt=s('<div class="p-5 bg-white"><!></div>'),dt=s('<div class="p-5 bg-white"><!></div>'),ct=s('<div class="p-5 bg-white"><!></div>'),ut=s('<div class="p-5 bg-white"><!></div>'),mt=s(`<p class="govuk-body text-sm">Demonstrates adding a custom CSS class to the label. Note that when a <code>label_custom_class</code> is provided, the component's default label
    styling (e.g., from <code>.gem-c-search__label</code> or <code>.govuk-label</code>) is intentionally not applied to prevent CSS
    conflicts.</p> <p class="govuk-body text-sm"><i>The custom class (like <code>govuk-heading-xl</code> used here) takes full
      control. This might affect default spacing (margins/padding) that the
      component's label class would normally handle. You may need to set <code></code> and potentially add further custom styling
      or utility classes to achieve the desired layout.</i></p> <div class="p-5 bg-white"><!></div>`,1),pt=s('<div class="p-5 bg-white"><!></div>'),bt=s(`<p class="govuk-body text-sm">Demonstrates applying a custom background color to the button. This color
    will be overridden if <code>on_govuk_blue</code> or <code>homepage</code> props
    are true.</p> <div class="p-5 bg-white"><!></div>`,1),ht=s(`<p class="govuk-body text-sm">Demonstrates using the <code>hint</code> prop to add descriptive text and
    the <code>input_width</code> prop to control the component's width simultaneously.</p> <div class="p-5 bg-white"><!></div>`,1),gt=s('<div class="p-5 bg-white"><!> <p class="govuk-body mt-4">Current bound value: <strong> </strong></p></div>'),vt=s('<div class="bg-orange-50 p-5 flex flex-col gap-8"><!> <!></div>'),_t=s('<span slot="header" class="text-lg"> </span>'),ft=s('<div><h5 class="underline underline-offset-4 my-6">Examples of specific use cases</h5> <!></div>');function yt(a,e){q(e,!0);const t=b=>{var k=gt(),h=r(k);l(h,{label_text:"Search with bound value",inline_label:!1,hint:"For exmaple: 'new value'",get value(){return o(c)},set value(f){V(c,f,!0)}});var C=m(h,2),_=m(r(C)),A=r(_,!0);i(_),i(C),i(k),j(()=>G(A,o(c))),n(b,k)};let c=z("initial value"),S=[{id:"1",heading:"1. Set search value",content:Te,code:he},{id:"2",heading:"2. Stop the label appearing inline",content:Le,code:ge},{id:"3",heading:"3. For use on govuk blue background",content:je,code:ve},{id:"4",heading:"4. Homepage",content:Ie,code:_e},{id:"5",heading:"5. Change label text",content:De,code:fe},{id:"6",heading:"6. Set id for search input",content:$e,code:ye},{id:"7",heading:"7. Large version",content:He,code:we},{id:"8",heading:"8. Change field name",content:Ne,code:Se},{id:"9",heading:"9. With aria controls attribute",content:Ge,code:xe},{id:"10",heading:"10. With custom button text",content:qe,code:ke},{id:"11",heading:"11. With set label size",content:Fe,code:Ae},{id:"12",heading:"12. Wrap label inside a heading",content:Me,code:Ce},{id:"13",heading:"13. With margin bottom",content:Ue,code:Ee},{id:"14",heading:"14. With margin bottom for the label",content:Ke,code:Oe},{id:"15",heading:"15. With custom label class",content:Re,code:We},{id:"16",heading:"16. With corrections disabled",content:Je,code:Pe},{id:"17",heading:"17. With custom button background color (MHCLG)",content:Ye,code:Be},{id:"18",heading:"18. With Hint Text and Custom Width",content:Qe,code:ze},{id:"19",heading:"19. Bindable Value",content:t,code:Ve}];var v=ft(),x=m(r(v),2);me(x,{activeClass:"text-[#EA580C] focus:ring-2 focus:ring-[#EA580C]",inactiveClass:"text-gray-500 dark:text-gray-400 hover:bg-slate-100",defaultClass:"w-full",children:(b,k)=>{var h=Y(),C=B(h);ce(C,17,()=>S,_=>_.id,(_,A)=>{pe(_,{children:(f,E)=>{var u=vt(),g=r(u);ue(g,()=>o(A).content);var T=m(g,2);be(T,{get code(){return o(A).code},language:"svelte"}),i(u),n(f,u)},$$slots:{default:!0,header:(f,E)=>{var u=_t(),g=r(u,!0);i(u),j(()=>G(g,o(A).heading)),n(f,u)}}})}),n(b,h)},$$slots:{default:!0}}),i(v),n(a,v),F()}const M=(a,e=P,t=P,c=P,S=P)=>{Z(a,{get name(){return e()},get folder(){return t()},get subFolder(){return c()},get homepage(){return S()},statusObject:wt,parentFolder:"components-update"})},U=(a,e=P)=>{re(a,{get homepage(){return e()},detailsArray:kt,connectedComponentsArray:At})};let wt={progress:"Baseline completed",statusRows:[{obj:{Accessible:!0,Responsive:!0,"Prog. enhanced":!0},visibleOnHompepage:!1},{obj:{Reviewed:!1,Tested:!1},visibleOnHomepage:!1}]},St=["A search box with label and attached submit button.",'Based on the <a href="https://components.publishing.service.gov.uk/component-guide/search" target="_blank" rel="noopener noreferrer">GOV.UK Publishing Components search box</a>.'],xt=['The component should ideally be used within an HTML <code>&lt;form&gt;</code> to allow standard form submission (works with or without JavaScript). Consider giving the form <code>role="search"</code> for accessibility.',"For client-side handling (e.g., in Single Page Applications where a full form submission isn't desired), you can use the <code>bind:selectedValue</code> prop to reactively get the confirmed selection without submitting the form.","Use this for site-wide search or specific finder searches where user input is needed to filter or find content."],kt=[{label:"Description",arr:St,visibleOnHomepage:!0,markdown:!0},{label:"Context",arr:xt,visibleOnHomepage:!1,markdown:!0}],At=[];var Ct=s('<div class="p-8"><!></div>'),Et=s('<!> <!> <!> <div id="examples" data-role="examples-section"><!></div>',1);function Ot(a,e){q(e,!0);const t=d=>{var p=Ct(),O=r(p);l(O,X(()=>o(E),{get value(){return o(x)},set value(y){V(x,y,!0)}})),i(p),j(()=>Q(p,`background-color: ${(o(E).homepage||o(E).on_govuk_blue?"#1d70b8":"")??""};`)),n(d,p)};let c=le.url.pathname.split("/"),S=de(c[c.length-1]),v=z(L(ee.md)),x=z(""),b=w(()=>ie([{name:"label_text",category:"Content",value:"Search on GOV.UK",description:{markdown:!0,arr:["The text content for the <code>label</code> element. Allows HTML."]},rows:1},{name:"value",category:"Content",value:o(x),isBinded:!0,description:{markdown:!0,arr:["The current value of the search input field. Can be bound to reactively get the confirmed selection without submitting a form."]},rows:1},{name:"button_text",category:"Content",value:"Search",description:{markdown:!0,arr:['Sets the visually hidden text content for the submit button, read by screen readers. Defaults to "Search".']},rows:1},{name:"name",category:"Content",value:"q",description:{markdown:!0,arr:['Sets the <code>name</code> attribute for the search input field. Defaults to "q".']},rows:1,isRequired:!0},{name:"hint",category:"Content",value:"",description:{markdown:!0,arr:["Optional hint text to display below the label and associate with the input via <code>aria-describedby</code>.","<strong>Rendering Behaviour:</strong>","&nbsp;&nbsp;&nbsp;- If the label is separate (not inline) AND <code>homepage</code> and <code>on_govuk_blue</code> are both false, the hint is rendered as a separate <code>&lt;div&gt;</code> below the label.","&nbsp;&nbsp;&nbsp;- If the label is separate AND either <code>homepage</code> or <code>on_govuk_blue</code> is true, the hint text is instead used as the <code>placeholder</code> attribute for the input field.","&nbsp;&nbsp;&nbsp;- If the label is inline, the hint text is not visually rendered (but still linked via <code>aria-describedby</code>)."]},rows:2},{name:"on_govuk_blue",category:"Styling",value:!1,description:{markdown:!0,arr:["Set to <code>true</code> to apply styling for use on a dark blue (<code>#003078</code>) background."]}},{name:"homepage",category:"Styling",value:!1,description:{markdown:!0,arr:["Set to <code>true</code> to apply specific styling for homepage use (e.g., large size, different button colors). This automatically applies the necessary styles for a dark blue background, effectively incorporating the behaviour of <code>on_govuk_blue: true</code>."]}},{name:"size",category:"Styling",options:["","large"],value:"",description:{markdown:!0,arr:["Sets the size variant. Leave empty for default, or set to <code>large</code>."]}},{name:"label_size",category:"Styling",options:["","s","m","l","xl"],value:"",description:{markdown:!0,arr:["Sets the size of the label text using GOV.UK typography classes. Options: <code>s</code>, <code>m</code>, <code>l</code>, <code>xl</code>. If set, <code>inline_label</code> defaults to <code>false</code>."]}},{name:"inline_label",category:"Styling",value:!0,description:{markdown:!0,arr:["Set to <code>false</code> to prevent the label from appearing absolutely positioned over the input field. Defaults to <code>true</code> unless <code>label_size</code> is set."]},visible:{name:"label_size",value:""}},{name:"margin_bottom",category:"Styling",options:[0,1,2,3,4,5,6,7,8,9],value:6,description:{markdown:!0,arr:["Sets the bottom margin for the component wrapper using the GOV.UK spacing scale (0-9). Defaults to 6."]}},{name:"label_margin_bottom",category:"Styling",options:[null,0,1,2,3,4,5,6,7,8,9],value:null,description:{markdown:!0,arr:["Sets the bottom margin for the label when it's not inline, using the GOV.UK spacing scale (0-9). Only applies if <code>inline_label</code> is <code>false</code> (or <code>label_size</code> is set)."]},visible:{name:"inline_label",value:!1}},{name:"label_custom_class",category:"Styling",value:"",description:{markdown:!0,arr:["Adds a custom CSS class to the label element."]},rows:1},{name:"input_width",category:"Styling",options:["","full","three-quarters","two-thirds","one-half","one-third","one-quarter"],value:"",description:{markdown:!0,arr:["Sets the maximum width of the entire search component using GOV.UK Frontend utility classes (e.g., <code>govuk-!-width-two-thirds</code>). The input and button will fill this width. Leave empty for default (stretches to fit its parent container)."]}},{name:"button_background_color",category:"Styling",value:"",description:{markdown:!0,arr:["Sets a custom background color for the search submit button using a valid CSS color value (e.g., <code>#ff0000</code>).","<strong>Note:</strong> This custom color will be overridden by the default styles if <code>on_govuk_blue</code> or <code>homepage</code> props are set to <code>true</code>."]},rows:1},{name:"wrap_label_in_a_heading",category:"Accessibility & Attributes",value:!1,description:{markdown:!0,arr:["Set to <code>true</code> to wrap the label content within a heading tag."]}},{name:"heading_level",category:"Accessibility & Attributes",options:[1,2,3,4,5,6],value:2,description:{markdown:!0,arr:["Sets the heading level (1-6) if <code>wrap_label_in_a_heading</code> is <code>true</code>. Defaults to 2."]},visible:{name:"wrap_label_in_a_heading",value:!0}},{name:"label_id",category:"Accessibility & Attributes",value:"",description:{markdown:!0,arr:["Sets the <code>id</code> attribute for the input field and the <code>for</code> attribute of the label. If left empty, a unique ID will be generated."]},rows:1},{name:"aria_controls",category:"Accessibility & Attributes",value:"",description:{markdown:!0,arr:["Sets the <code>aria-controls</code> attribute on the input field, pointing to the ID of the element whose content is controlled by the search."]},rows:1},{name:"disable_corrections",category:"Accessibility & Attributes",value:!1,description:{markdown:!0,arr:['Set to <code>true</code> to disable mobile browser autocorrect and autocapitalization features on the input field by adding <code>autocorrect="off"</code> and <code>autocapitalize="off"</code>.']}},{name:"id",category:"Accessibility & Attributes",value:"",description:{markdown:!0,arr:["Sets the <code>id</code> attribute on the wrapping <code>div</code> element."]},rows:1,isRequired:!0},{name:"classes",category:"Accessibility & Attributes",value:"",description:{markdown:!0,arr:["Adds custom CSS classes to the wrapping <code>div</code> element. Should typically be prefixed with <code>js-</code> if used for JavaScript hooks."]},rows:1},{name:"dataAttributes",category:"Accessibility & Attributes",value:{},description:{markdown:!0,arr:['Adds custom <code>data-*</code> attributes to the wrapping <code>div</code> element. Provide as a JSON object (e.g., <code>{"module": "my-module"}</code>). Note: <code>data-module="gem-toggle-input-class-on-focus"</code> is added by default.']},rows:5},{name:"aria",category:"Accessibility & Attributes",value:{},description:{markdown:!0,arr:['Adds custom <code>aria-*</code> attributes to the wrapping <code>div</code> element. Provide as a JSON object (e.g., <code>{"labelledby": "element-id"}</code>).']},rows:5},{name:"role",category:"Accessibility & Attributes",value:"",description:{markdown:!0,arr:['Sets the <code>role</code> attribute on the wrapping <code>div</code> element. Consider using <code>role="search"</code> on the parent <code>form</code> element instead.']},rows:1},{name:"lang",category:"Accessibility & Attributes",value:"",description:{markdown:!0,arr:["Sets the language (<code>lang</code> attribute) for the component."]},rows:1},{name:"dir",category:"Accessibility & Attributes",options:["","ltr","rtl","auto"],value:"",description:{markdown:!0,arr:["Sets the text direction (<code>dir</code> attribute) for the component. Empty string means default behavior."]}}])),k=function(d,p,O){return d.map(y=>{let W=O[y.name]??y.value;return y.isEditable===p&&W!=null?typeof W=="object"?JSON.stringify(W,null,2):W:null})},h=z(L(k(o(b),!0,{}))),C=w(()=>({})),_=w(()=>k(o(b),!1,o(C))),A=w(()=>ne(o(b),o(h))),f=w(()=>se(o(b),o(h),o(_))),E=w(()=>o(f)[0]),u=w(()=>o(f)[1]),g=L({});J(()=>{o(u).forEach(d=>{g[d]=!0}),Object.keys(g).forEach(d=>{o(u).includes(d)||(g[d]=!1)})});let T=w(()=>Object.fromEntries(Object.entries(o(E)).map(([d,p])=>{var O,y;return[d,typeof p=="function"?(y=(O=o(b).find(W=>W.name===d))==null?void 0:O.functionElements)==null?void 0:y.functionAsString:p]})));var I=Et(),D=B(I);te(D,{wrapper:{component:{WrapperInformation:U,WrapperNameAndStatus:M},name:S},homepage:!1});var $=m(D,2);ae($,{get parametersParsingErrorsArray(){return o(u)},get parametersParsingErrorsObject(){return g},onCloseFunction:d=>o(u).filter(p=>p!=d)});var H=m($,2);oe(H,{Component:t,get parametersSourceArray(){return o(b)},get derivedParametersValuesArray(){return o(_)},get parametersVisibleArray(){return o(A)},get parametersParsingErrorsObject(){return g},get copyParametersToClipboardObject(){return o(T)},get demoScreenWidth(){return o(v)},set demoScreenWidth(d){V(v,d,!0)},get statedParametersValuesArray(){return o(h)},set statedParametersValuesArray(d){V(h,d,!0)}});var N=m(H,2),K=r(N);yt(K,{}),i(N),n(a,I),F()}const Ft=Object.freeze(Object.defineProperty({__proto__:null,WrapperInformation:U,WrapperNameAndStatus:M,default:Ot},Symbol.toStringTag,{value:"Module"}));export{Ft as _};
